{"version":3,"sources":["components/Card/styles.module.scss","components/Card/CardHeader/styles.module.scss","components/Card/CardError/styles.module.scss","components/Card/CardLoader/styles.module.scss","components/Card/CardFooter/styles.module.scss","components/Card/CardContent/CardContentExtra/styles.module.scss","screens/Home/styles.module.scss","components/Card/CardContent/styles.module.scss","components/Header/styles.module.scss","components/Card/CardHeader/CardHeader.tsx","components/Card/CardError/CardError.tsx","assets/images/loader.svg","components/Card/CardLoader/CardLoader.tsx","utils/formatter.ts","components/Card/CardFooter/CardFooter.tsx","components/Card/CardContent/CardContentExtra/CardContentExtra.tsx","utils/helper.ts","services/api.ts","components/Card/CardContent/CardContent.tsx","components/Card/Card.tsx","screens/Home/Home.tsx","assets/images/logo.svg","components/Header/Header.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","CardHeader","title","className","styles","cardHeader","CardError","cardErrorText","CardLoader","cardLoading","src","loading","alt","unixToTime","timestamp","Date","toLocaleTimeString","hour12","CardFooter","cardFooter","undefined","CardContentExtra","humidity","pressure","cardContentExtra","colorByTemp","temp","color","cache","setupCache","maxAge","cacheTime","Number","process","isNaN","api","axios","create","adapter","baseURL","ApiWeatherService","city","a","get","params","q","cityWeatherResponse","data","CardContent","isPrincipal","useState","setLoading","error","setError","cityWeather","setCityWeather","update","setUpdate","useEffect","refresh","execute","then","catch","message","finally","interval","setInterval","refreshTime","clearInterval","cardError","onClick","cardBtn","cardContent","red","blue","orange","textColor","main","cardTemp","Math","round","cardContentGrau","dt","Card","card","cardPrincipal","Home","name","cities","home","map","Header","headerNavbar","href","logo","height","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5adf0339.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"styles_card__3PmkM\",\"cardPrincipal\":\"styles_cardPrincipal__1PbGW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardHeader\":\"styles_cardHeader__2s3b0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardErrorText\":\"styles_cardErrorText__bzx0z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardLoading\":\"styles_cardLoading__2_JFN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardFooter\":\"styles_cardFooter__3CHt6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardContentExtra\":\"styles_cardContentExtra__7NKQN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"styles_home__2hAYz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardContent\":\"styles_cardContent__2_YeZ\",\"cardTemp\":\"styles_cardTemp__3Cov0\",\"cardContentGrau\":\"styles_cardContentGrau__2_QeN\",\"red\":\"styles_red__278M3\",\"blue\":\"styles_blue__3C8Ca\",\"orange\":\"styles_orange__1n-Pm\",\"cardError\":\"styles_cardError__16AET\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerNavbar\":\"styles_headerNavbar__1C5Wk\"};","import styles from './styles.module.scss';\n\ntype Props = {\n  title: string;\n}\nexport function CardHeader({title}: Props)  {\n  return (\n    <div className={styles.cardHeader}>\n      <h4>{title}</h4>\n    </div>\n  );\n}\n","import styles from './styles.module.scss';\n\nexport function CardError() {\n  return (\n    <div className={styles.cardErrorText}>\n      Something went wrong\n    </div>\n  )\n}","export default __webpack_public_path__ + \"static/media/loader.e47234b5.svg\";","import loading from '../../../assets/images/loader.svg';\nimport styles from './styles.module.scss';\n\nexport function CardLoader() {\n  return (\n    <div className={styles.cardLoading}>\n      <img src={loading} alt=\"Loading\" title=\"Loading data\" />\n    </div>\n  );\n}","function unixToTime(timestamp: number) {\n  const time = new Date(timestamp * 1000).toLocaleTimeString('pt-br', {\n    hour12: true\n  });\n  \n  return time;\n}\n\nexport { unixToTime };","import {unixToTime} from '../../../utils/formatter';\nimport styles from './styles.module.scss';\n\ntype Props = {\n  timestamp: number | undefined;\n}\n\nexport function CardFooter({timestamp}: Props) {\n  return (\n    <div className={styles.cardFooter}>\n      <span>Updated at: {timestamp !== undefined && unixToTime(timestamp)}</span>\n    </div>\n  );\n}","import styles from './styles.module.scss';\n\ntype Props = {\n  humidity: number | undefined;\n  pressure: number | undefined;\n}\n\nexport function CardContentExtra({humidity, pressure}: Props) {\n  return (\n    <div className={styles.cardContentExtra}>\n      <div>\n        <span>HUMIDITY</span><br />\n        <strong>{humidity}%</strong>\n      </div>\n      <div>\n        <span>PRESSURE</span> <br />\n        <strong>{pressure}<span>hPa</span></strong>\n      </div>\n    </div>\n  );\n}","function colorByTemp(temp: number | undefined) {\n  if (temp === undefined) {\n    return '';\n  }\n  \n  var color = 'red';\n\n  if (temp <= 5) {\n    color = 'blue';\n  } else if (temp > 5 && temp < 25) {\n    color = 'orange';\n  }\n\n  return color;\n}\n\nfunction cacheTime() {\n  var cacheTime = Number(process.env.REACT_APP_CACHE_TIME_MINUTES);\n\n  if (cacheTime <= 0 || cacheTime === undefined || isNaN(cacheTime)) {\n    cacheTime = 10;\n  }\n\n  return cacheTime * 60 * 1000\n}\n\nfunction refreshTime() {\n  var refreshTime = Number(process.env.REACT_APP_REFRESH_WEATHER_TIME_MINUTES);\n\n  if (refreshTime <= 0 || refreshTime === undefined || isNaN(refreshTime)) {\n    refreshTime = 10;\n  }\n\n  return refreshTime * 60 * 1000\n}\n\nexport { colorByTemp, cacheTime, refreshTime };","import axios from 'axios';\nimport { setupCache } from 'axios-cache-adapter'\nimport { ICityWeather } from '../interfaces/ICityWeather';\nimport { cacheTime } from '../utils/helper';\n\nconst cache = setupCache({\n  maxAge: cacheTime()\n});\n\nconst api = axios.create({\n  adapter: cache.adapter,\n  baseURL: `${process.env.REACT_APP_WEATHER_API_BASE_URL}?appid=${process.env.REACT_APP_WEATHER_API_KEY}&units=metric`\n});\n\n\nclass ApiWeatherService {\n  async execute(city: string) {\n    const { data: cityWeatherResponse } = await api.get<ICityWeather>('', {\n      params: {\n        q: city\n      }\n    });\n\n    return cityWeatherResponse;\n  }\n}\n\nexport { ApiWeatherService }","import { CardError } from '../CardError';\nimport styles from './styles.module.scss';\nimport { CardLoader } from '../CardLoader';\nimport { CardFooter } from '../CardFooter';\nimport { useEffect, useState } from 'react';\nimport { CardContentExtra } from './CardContentExtra';\nimport { ApiWeatherService } from '../../../services/api';\nimport { ICityWeather } from '../../../interfaces/ICityWeather';\nimport { colorByTemp, refreshTime } from '../../../utils/helper';\n\ntype Props = {\n  city: string;\n  isPrincipal: boolean;\n};\n\nexport function CardContent({city, isPrincipal}: Props) {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [cityWeather, setCityWeather] = useState<ICityWeather | null>(null);\n  const [update, setUpdate] = useState(false);\n\n  function handleUpdate() {\n    setUpdate(!update);\n  }\n\n  useEffect(() => {\n    function refresh() {\n      setLoading(true);\n      const service = new ApiWeatherService();\n      service.execute(city).then((cityWeatherResponse) => {\n        setError(false);\n        setCityWeather(cityWeatherResponse);\n      }).catch(({message}) => {\n        setError(true);\n      }).finally(\n        () => setLoading(false)\n      );\n    }\n\n    refresh();\n\n    const interval = setInterval(() => {\n      refresh();\n    }, refreshTime());\n\n    return (() => {\n      clearInterval(interval);\n    });\n  }, [city, update])\n\n  function textColor(color: string) {\n    switch(color) {\n      case 'red':\n        return styles.red;\n\n      case 'blue':\n        return styles.blue;\n\n      case 'orange':\n        return styles.orange;\n    }\n    return '';\n  }\n\n  if (loading) {\n    return (\n      <CardLoader />\n    );\n  }\n\n\n  if (error) {\n    return (\n      <div className={styles.cardError}>\n        <CardError />\n        <button onClick={handleUpdate} className={styles.cardBtn}>Try Again</button>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <div className={styles.cardContent}>\n          <div className={textColor(colorByTemp(cityWeather?.main.temp)) + \" \" + styles.cardTemp} title={city + ' Weather'}>\n            {cityWeather?.main.temp !== undefined && Math.round(cityWeather?.main.temp)}<span className={styles.cardContentGrau}>º</span>\n          </div>\n      </div>\n      { isPrincipal &&\n        <CardContentExtra \n          humidity={cityWeather?.main.humidity}\n          pressure={cityWeather?.main.pressure}\n        />\n      }\n      <CardFooter timestamp={cityWeather?.dt} />\n    </>\n  );\n}","import { CardHeader } from \"./CardHeader\";\nimport { CardContent } from \"./CardContent\";\nimport styles from './styles.module.scss';\n\ntype Props = {\n  city: string;\n  isPrincipal: boolean;\n}\n\nexport function Card({city, isPrincipal}: Props) {\n  return (\n    <div className={styles.card + \" \" + (isPrincipal && styles.cardPrincipal)}>\n      <CardHeader title={city} />\n      <CardContent city={city} isPrincipal={isPrincipal} />\n    </div>\n  );\n}","import { useState } from 'react';\nimport { Card } from \"../../components/Card\";\nimport styles from './styles.module.scss';\n\nexport function Home() {\n\n  const [cities] = useState([\n    {\n      name:'Nuuk, GL', \n      isPrincipal: false \n    }, \n    {\n      name:'Urubici, BR', \n      isPrincipal: true \n    }, \n    {\n      name:'Nairobi, KE', \n      isPrincipal: false \n    }\n  ]);\n\n  return (\n    <section className={styles.home}>\n      {cities.map(city => {\n        return (\n          <Card key={city.name} city={city.name} isPrincipal={city.isPrincipal}></Card>\n        )\n      })}\n    </section>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/logo.05ebaa1c.svg\";","import logo from '../../assets/images/logo.svg'\n\nimport styles from './styles.module.scss';\n\nexport function Header() {\n  return (\n    <header className={styles.headerNavbar}>\n      <a href=\"/\">\n        <img src={logo} height=\"22\" alt=\"Logo Weather Now\" title=\"Logo Weather Now\" />\n      </a>\n    </header>\n  );\n}","import { Home } from './screens/Home';\nimport { Header } from './components/Header';\nimport './App.css';\n\nfunction App() {\n  return (\n    <>\n      <Header></Header>\n      <Home></Home>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}